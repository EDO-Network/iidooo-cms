<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iidooo.cms.dao.extend.ContentProductDao">
	<resultMap id="BaseResultMap" type="com.iidooo.cms.dto.extend.ContentProductDto">
		<id column="ContentID" property="contentID" jdbcType="INTEGER" />
		<result column="ContentType" property="contentType" jdbcType="CHAR" />
		<result column="ContentTitle" property="contentTitle" jdbcType="VARCHAR" />
		<result column="ContentSubTitle" property="contentSubTitle" jdbcType="VARCHAR" />
		<result column="ContentImageTitle" property="contentImageTitle" jdbcType="VARCHAR" />
		<result column="MetaTitle" property="metaTitle" jdbcType="VARCHAR" />
		<result column="MetaKeywords" property="metaKeywords" jdbcType="VARCHAR" />
		<result column="MetaDescription" property="metaDescription" jdbcType="VARCHAR" />
		<result column="ContentSummary" property="contentSummary" jdbcType="VARCHAR" />
		<result column="Sequence" property="sequence" jdbcType="INTEGER" />
		<result column="IsSilent" property="isSilent" jdbcType="INTEGER" />
		<result column="ProductCountry" property="productCountry" jdbcType="CHAR" />
		<result column="ProductOrigin" property="productOrigin" jdbcType="CHAR" />
		<result column="Remarks" property="remarks" jdbcType="VARCHAR" />
		<result column="CreateTime" property="createTime" jdbcType="VARCHAR" />
		<result column="CreateUser" property="createUser" jdbcType="INTEGER" />
		<result column="UpdateTime" property="updateTime" jdbcType="VARCHAR" />
		<result column="UpdateUser" property="updateUser" jdbcType="INTEGER" />
		<result column="IsDelete" property="isDelete" jdbcType="INTEGER" />
		<result column="Version" property="version" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.iidooo.cms.dto.extend.ContentProductDto" extends="BaseResultMap">
		<result column="ContentBody" property="contentBody" jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		C.ContentID, C.ContentType, C.ContentTitle, C.ContentSubTitle, C.ContentImageTitle,
		C.MetaTitle,
		C.MetaKeywords,
		C.MetaDescription, C.ContentSummary,
		C.Sequence,
		C.IsSilent, P.ProductCountry, P.ProductOrigin, C.Remarks, C.CreateTime, C.CreateUser,
		C.UpdateTime, C.UpdateUser, C.IsDelete, C.Version
	</sql>
	<sql id="Blob_Column_List">
		C.ContentBody
	</sql>
	
	<select id="selectByContentID" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from CONTENT C
		join CONTENT_PRODUCT P on C.IsDelete = 0 and C.ContentID = P.ContentID
		and C.ContentID = #{contentID}
	</select>
	
	<select id="selectProductsCount" resultType="java.lang.Integer">
		select count(C.ContentID)		
		from CONTENT C
		join CONTENT_PRODUCT P on C.IsDelete = 0 and C.ContentID = P.ContentID 
      	<if test="product.productCountry != null and product.productCountry > 0" >
        and P.ProductCountry = #{product.productCountry,jdbcType=INTEGER}
      	</if>
      	<if test="product.productOrigin != null and product.productOrigin > 0" >
        and P.ProductOrigin = #{product.productOrigin,jdbcType=INTEGER}
      	</if>
		and C.ChannelID in
		<foreach item="item" index="index" collection="channels" open="(" separator="," close=")">#{item.channelID}</foreach>
	</select>
	
	<select id="selectProducts" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />		
		from CONTENT C
		join CONTENT_PRODUCT P on C.IsDelete = 0 and C.ContentID = P.ContentID 
      	<if test="product.productCountry != null and product.productCountry > 0" >
        and P.ProductCountry = #{product.productCountry,jdbcType=INTEGER}
      	</if>
      	<if test="product.productOrigin != null and product.productOrigin > 0" >
        and P.ProductOrigin = #{product.productOrigin,jdbcType=INTEGER}
      	</if>
		and C.ChannelID in
		<foreach item="item" index="index" collection="channels" open="(" separator="," close=")">#{item.channelID}</foreach>
		order by C.ChannelID asc, C.ContentID asc, C.UpdateTime desc limit #{page.start}, #{page.pageSize}
	</select>


	<insert id="insert" parameterType="com.iidooo.cms.dto.extend.ContentProductDto">
		insert into CONTENT_PRODUCT (ContentID, ProductCountry,
		ProductOrigin)
		values (#{contentID,jdbcType=INTEGER}, #{productCountry,jdbcType=CHAR},
		#{productOrigin,jdbcType=CHAR})
	</insert>
	
  <update id="updateByPrimaryKey" parameterType="com.iidooo.cms.dto.extend.ContentProductDto" >
    update CONTENT_PRODUCT
    set ProductCountry = #{productCountry,jdbcType=CHAR},
      ProductOrigin = #{productOrigin,jdbcType=CHAR}
    where ContentID = #{contentID,jdbcType=INTEGER}
  </update>
</mapper>