<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iidooo.cms.dao.extend.ContentDao">
	<resultMap id="BaseResultMap" type="com.iidooo.cms.dto.extend.ContentDto">
		<id column="ContentID" property="contentID" jdbcType="INTEGER" />
		<result column="ChannelID" property="channelID" jdbcType="INTEGER" />
		<result column="ContentType" property="contentType" jdbcType="CHAR" />
		<result column="ContentTitle" property="contentTitle" jdbcType="VARCHAR" />
		<result column="ContentSubTitle" property="contentSubTitle" jdbcType="VARCHAR" />
		<result column="ContentImageTitle" property="contentImageTitle" jdbcType="VARCHAR" />
		<result column="MetaTitle" property="metaTitle" jdbcType="VARCHAR" />
		<result column="MetaKeywords" property="metaKeywords" jdbcType="VARCHAR" />
		<result column="MetaDescription" property="metaDescription" jdbcType="VARCHAR" />
		<result column="ContentSummary" property="contentSummary" jdbcType="VARCHAR" />
		<result column="IsSilent" property="isSilent" jdbcType="INTEGER" />
		<result column="PageViewed" property="pageViewed" jdbcType="INTEGER" />
		<result column="UniqueVisitor" property="uniqueVisitor" jdbcType="INTEGER" />
		<result column="Remarks" property="remarks" jdbcType="VARCHAR" />
		<result column="CreateTime" property="createTime" jdbcType="VARCHAR" />
		<result column="CreateUser" property="createUser" jdbcType="INTEGER" />
		<result column="UpdateTime" property="updateTime" jdbcType="VARCHAR" />
		<result column="UpdateUser" property="updateUser" jdbcType="INTEGER" />
		<result column="IsDelete" property="isDelete" jdbcType="INTEGER" />
		<result column="Version" property="version" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.iidooo.cms.dto.extend.ContentDto" extends="BaseResultMap">
		<result column="ContentBody" property="contentBody" jdbcType="LONGVARCHAR" />
	</resultMap>

	<sql id="Base_Column_List">
		C.ContentID, C.ChannelID, C.ContentType, C.ContentTitle, C.ContentSubTitle, C.ContentImageTitle,
		C.MetaTitle, C.MetaKeywords,
		C.MetaDescription,
		C.ContentSummary, C.IsSilent, PageViewed, UniqueVisitor,
		C.Remarks, C.CreateTime, C.CreateUser, C.UpdateTime,
		C.UpdateUser,
		C.IsDelete,
		C.Version
	</sql>
	<sql id="Blob_Column_List">
		C.ContentBody
	</sql>

	<select id="selectByContentID" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
		SELECT
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		FROM CMS_CONTENT C
		where C.ContentID = #{contentID,jdbcType=INTEGER}
		AND C.IsDelete = 0
	</select>

	<select id="selectOneContentByChannelPath" resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from CMS_CONTENT C
		join CMS_CHANNEL L
		on C.ChannelID = L.ChannelID and C.IsDelete = 0 and L.IsDelete = 0
		and L.ChannelPath =
		#{channelPath,jdbcType=VARCHAR}
		join CMS_SITE S
		on S.SiteID = L.SiteID and S.IsDelete = 0 and S.SiteCode = #{siteCode,jdbcType=VARCHAR}
		order by
		C.UpdateTime desc limit 0, 1
	</select>

	<select id="selectContentListCount" resultType="java.lang.Integer">
		select count(C.ContentID)
		from CMS_CONTENT C
		join CMS_CHANNEL L
		on C.ChannelID = L.ChannelID and C.IsDelete = 0 and L.IsDelete = 0
		and L.SiteID =
		#{siteID,jdbcType=INTEGER}
		<if test="content != null">
			<if test="content.channelID != null">
				and C.ChannelID = #{content.channelID,jdbcType=INTEGER}
			</if>
		</if>
	</select>

	<select id="selectContentList" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		,
		C.ChannelName as channelName, CU.UserName as createUserName, UU.UserName as updateUserName
		from
		(select
		<include refid="Base_Column_List" />
		, L.ChannelName
		from CMS_CONTENT C
		join CMS_CHANNEL L
		on L.ChannelID = C.ChannelID and C.IsDelete = 0 and
		L.IsDelete = 0 and L.SiteID =
		#{siteID,jdbcType=INTEGER}
		order by C.UpdateTime desc limit #{page.start},
		#{page.pageSize}
		<if test="content != null">
			<if test="content.channelID != null">
				and C.ChannelID = #{content.channelID,jdbcType=INTEGER}
			</if>
		</if>
		) C
		left outer join PASSPORT_USER CU on C.CreateUser = CU.UserID and CU.IsDelete = 0
		left outer join PASSPORT_USER UU on C.UpdateUser = UU.UserID and
		UU.IsDelete = 0
	</select>

	<select id="selectContentListCountByChannels" resultType="java.lang.Integer">
		select count(C.ContentID)
		from CMS_CONTENT C
		join CMS_CHANNEL L
		on C.ChannelID = L.ChannelID and C.IsDelete = 0 and L.IsDelete = 0 and L.ChannelID in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">#{item}</foreach>
	</select>
	<select id="selectContentListByChannels" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		,
		C.ChannelName as channelName, CU.UserName as createUserName, UU.UserName as updateUserName
		from
		(select
		<include refid="Base_Column_List" />
		, L.ChannelName
		from CMS_CONTENT C
		join CMS_CHANNEL L on C.ChannelID = L.ChannelID and C.IsDelete = 0 and L.IsDelete = 0 and
		L.ChannelID in
		<foreach item="item" index="index" collection="channels" open="(" separator="," close=")">#{item}</foreach>
		order by C.${page.sortField} ${page.sortType}
		limit #{page.start}, #{page.pageSize}) C
		left outer join PASSPORT_USER CU on C.CreateUser = CU.UserID
		and CU.IsDelete = 0
		left outer join PASSPORT_USER UU on C.UpdateUser = UU.UserID and UU.IsDelete = 0
	</select>

	<select id="selectContents" resultMap="ResultMapWithBLOBs" parameterType="java.util.Map">
		SELECT
		<include refid="Base_Column_List" />
		FROM CMS_CONTENT C
		INNER JOIN CMS_CHANNEL L
		ON C.ChannelID = L.ChannelID AND L.ChannelPath = #{channelPath,jdbcType=VARCHAR}
		AND L.IsDelete = 0
		AND
		C.IsDelete = 0
		<if test="tagClass != null">
			INNER JOIN
			(SELECT ContentID, ItemCode FROM CONTENT_TAG T
			WHERE T.ClassCode = #{tagClass,jdbcType=VARCHAR} AND
			<if test="tagItem != null">
				T.ItemCode = #{tagItem,jdbcType=VARCHAR}
			</if>
			<if test="tagItems != null">
				T.ItemCode IN
				<foreach item="item" index="index" collection="tagItems" open="(" separator="," close=")">#{item}</foreach>
			</if>
			AND T.IsDelete = 0) T ON C.ContentID = T.ContentID
		</if>
		ORDER BY ${sortBy} ${sortType}
		<if test="count != null">
			LIMIT 0, ${count}
		</if>
	</select>

	<select id="selectByContentDto" resultMap="ResultMapWithBLOBs" parameterType="com.iidooo.cms.dto.extend.ContentDto">
		select
		<include refid="Base_Column_List" />
		from CMS_CONTENT C
		where
		<if test="contentTitle != null and contentTitle != ''">
			C.ContentTitle like concat('%',${contentTitle,jdbcType=VARCHAR},'%') and
		</if>
		<if test="createUser != null and createUser != ''">
			C.CreateUser = ${createUser,jdbcType=INTEGER} and
		</if>
		C.IsDelete = 0
		order by UpdateTime desc
	</select>


	<select id="selectByChannel" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from CMS_CONTENT C
		where C.IsDelete = 0 and C.ChannelID = #{channelID}
		limit 0, 1
	</select>

	<select id="selectByChannelPath" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from CMS_CONTENT C
		join CMS_CHANNEL L
		on C.ChannelID = L.ChannelID and C.IsDelete = 0 and L.IsDelete = 0
		and L.ChannelPath =
		#{channelPath,jdbcType=VARCHAR}
		join CMS_SITE S
		on S.SiteID = L.SiteID and S.IsDelete = 0 and S.SiteCode = #{siteCode,jdbcType=VARCHAR}
		order by
		C.${page.sortField} ${page.sortType} limit #{page.start}, #{page.pageSize}
	</select>

	<insert id="insert" useGeneratedKeys="true" keyProperty="contentID" parameterType="com.iidooo.cms.dto.extend.ContentDto">
		insert into CMS_CONTENT (ChannelID, ContentType,
		ContentTitle,
		ContentSubTitle,
		ContentImageTitle,
		MetaTitle, MetaKeywords, MetaDescription,
		ContentSummary, IsSilent,
		Remarks,
		CreateTime,
		CreateUser,
		UpdateTime,
		UpdateUser, IsDelete,
		Version, ContentBody)
		values(#{channelID,jdbcType=INTEGER},#{contentType,jdbcType=CHAR},
		#{contentTitle,jdbcType=VARCHAR},
		#{contentSubTitle,jdbcType=VARCHAR}, #{contentImageTitle,jdbcType=VARCHAR},
		#{metaTitle,jdbcType=VARCHAR},
		#{metaKeywords,jdbcType=VARCHAR},
		#{metaDescription,jdbcType=VARCHAR},
		#{contentSummary,jdbcType=VARCHAR},
		#{isSilent,jdbcType=INTEGER},
		#{remarks,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR},
		#{createUser,jdbcType=INTEGER},
		#{updateTime,jdbcType=VARCHAR},
		#{updateUser,jdbcType=INTEGER}, 0, 1,
		#{contentBody,jdbcType=LONGVARCHAR})
	</insert>

	<update id="update" parameterType="com.iidooo.cms.dto.extend.ContentDto">
		update CMS_CONTENT
		set
		ChannelID = #{channelID,jdbcType=INTEGER},
		ContentType = #{contentType,jdbcType=CHAR},
		ContentTitle =
		#{contentTitle,jdbcType=VARCHAR},
		ContentSubTitle =
		#{contentSubTitle,jdbcType=VARCHAR},
		ContentImageTitle =
		#{contentImageTitle,jdbcType=VARCHAR},
		MetaTitle = #{metaTitle,jdbcType=VARCHAR},
		MetaKeywords = #{metaKeywords,jdbcType=VARCHAR},
		MetaDescription =
		#{metaDescription,jdbcType=VARCHAR},
		ContentSummary =
		#{contentSummary,jdbcType=VARCHAR},
		ContentBody =
		#{contentBody,jdbcType=LONGVARCHAR},
		IsSilent =
		#{isSilent,jdbcType=INTEGER},
		Remarks =
		#{remarks,jdbcType=VARCHAR},
		UpdateTime = #{updateTime,jdbcType=VARCHAR},
		UpdateUser =
		#{updateUser,jdbcType=INTEGER},
		Version = Version + 1
		where
		ContentID = #{contentID,jdbcType=INTEGER}
	</update>

	<update id="delete" parameterType="com.iidooo.cms.dto.extend.ContentDto">
		update CMS_CONTENT
		set IsDelete = 1,
		UpdateTime = #{updateTime,jdbcType=VARCHAR},
		UpdateUser =
		#{updateUser,jdbcType=INTEGER},
		Version = Version + 1
		where ContentID = #{contentID,jdbcType=INTEGER}
	</update>
</mapper>