<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iidooo.cms.dao.extend.CmsContentDao">
	<resultMap id="BaseResultMap" type="com.iidooo.cms.dto.extend.CmsContentDto">
		<id column="ContentID" jdbcType="INTEGER" property="contentID" />
		<result column="ChannelID" jdbcType="INTEGER" property="channelID" />
		<result column="ContentType" jdbcType="INTEGER" property="contentType" />
		<result column="ContentTitle" jdbcType="VARCHAR" property="contentTitle" />
		<result column="ContentSubTitle" jdbcType="VARCHAR" property="contentSubTitle" />
		<result column="ContentImageTitle" jdbcType="VARCHAR" property="contentImageTitle" />
		<result column="MetaTitle" jdbcType="VARCHAR" property="metaTitle" />
		<result column="MetaKeywords" jdbcType="VARCHAR" property="metaKeywords" />
		<result column="MetaDescription" jdbcType="VARCHAR" property="metaDescription" />
		<result column="ContentSummary" jdbcType="VARCHAR" property="contentSummary" />
		<result column="Sequence" jdbcType="INTEGER" property="sequence" />
		<result column="IsAllowComment" jdbcType="INTEGER" property="isAllowComment" />
		<result column="Remarks" jdbcType="VARCHAR" property="remarks" />
		<result column="CreateTime" jdbcType="VARCHAR" property="createTime" />
		<result column="CreateUser" jdbcType="INTEGER" property="createUser" />
		<result column="UpdateTime" jdbcType="VARCHAR" property="updateTime" />
		<result column="UpdateUser" jdbcType="INTEGER" property="updateUser" />
		<result column="IsDelete" jdbcType="INTEGER" property="isDelete" />
		<result column="Version" jdbcType="INTEGER" property="version" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.iidooo.cms.dto.extend.CmsContentDto" extends="BaseResultMap">
		<result column="ContentBody" property="contentBody" jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		C.ContentID, C.ChannelID, C.ContentType, C.ContentTitle, C.ContentSubTitle, C.ContentImageTitle,
		C.MetaTitle, C.MetaKeywords, C.MetaDescription, C.ContentSummary, C.Sequence, C.IsAllowComment,
		C.Remarks, C.CreateTime, C.CreateUser, C.UpdateTime, C.UpdateUser, C.IsDelete, C.Version
	</sql>
	<sql id="Blob_Column_List">
		C.ContentBody
	</sql>
<!-- 
	<select id="selectChannelContentsCount" resultType="java.lang.Integer">
		select count(C.ContentID) from IDO_CMS_CONTENT C
		join IDO_CMS_CHANNEL L on C.IsDelete = 0 and C.ChannelID = L.ChannelID and C.ChannelID in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">#{item.channelID}</foreach>
	</select>
	<select id="selectChannelContents" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		, L.ChannelName as channelName
		from IDO_CMS_CONTENT C
		join IDO_CMS_CHANNEL L on C.IsDelete = 0 and C.ChannelID = L.ChannelID and C.ChannelID in
		<foreach item="item" index="index" collection="channels" open="(" separator="," close=")">#{item.channelID}</foreach>
		order by C.ChannelID asc, C.ContentID asc, C.UpdateTime desc limit #{page.start}, #{page.end}
	</select>

	<select id="selectAllCount" resultType="java.lang.Integer">
		select count(*) from IDO_CMS_CONTENT C where C.IsDelete = 0
	</select>
	<select id="selectAll" resultMap="BaseResultMap" parameterType="com.iidooo.framework.dto.base.PagingDto">
		select
		<include refid="Base_Column_List" />
		from IDO_CMS_CONTENT C where C.IsDelete = 0 order by C.UpdateTime desc limit #{start}, #{end}
	</select>

	<select id="selectContentsByPV" resultMap="BaseResultMap" parameterType="java.util.Map">
		SELECT
		<include refid="Base_Column_List" />
		, S.PV FROM IDO_CMS_CONTENT C
		inner join IDO_CMS_CHANNEL L
		on C.ChannelID = L.ChannelID and L.ChannelPath = #{channelPath,jdbcType=VARCHAR} and
		L.IsDelete = 0 and C.IsDelete = 0
		inner join
		(SELECT ContentID FROM IDO_CMS_CONTENT_TAG T
		where T.ClassCode = #{tagClass,jdbcType=VARCHAR} and
		T.ItemCode = #{tagItem,jdbcType=VARCHAR} and T.IsDelete = 0) T
		on C.ContentID = T.ContentID
		left outer join
		(SELECT count(*) PV, TableDataID FROM
		IDO_CMS_STATISTICS S
		where s.TableName = "IDO_CMS_CONTENT" and s.StatisticsType = 1 and S.IsDelete = 0) S
		on S.TableDataID = C.ContentID order by S.PV
		${sortType}
		<if test="count != null">
			LIMIT 0, ${count}
		</if>
	</select>

	<select id="selectContentsByTag" resultMap="BaseResultMap" parameterType="java.util.Map">
		SELECT
		<include refid="Base_Column_List" />
		, T.ItemCode FROM IDO_CMS_CONTENT C
		inner join IDO_CMS_CHANNEL L
		on C.ChannelID = L.ChannelID and L.ChannelPath = #{channelPath,jdbcType=VARCHAR} and
		L.IsDelete = 0 and C.IsDelete = 0
		inner join
		(SELECT ContentID, ItemCode FROM IDO_CMS_CONTENT_TAG T
		where T.ClassCode = #{tagClass,jdbcType=VARCHAR}
		and
		<if test="tagItem != null">
			T.ItemCode = #{tagItem,jdbcType=VARCHAR}
		</if>
		<if test="tagItems != null">
			T.ItemCode in
			<foreach item="item" index="index" collection="tagItems" open="(" separator="," close=")">#{item}</foreach>
		</if>
		and T.IsDelete = 0) T
		on C.ContentID = T.ContentID order by T.ItemCode ${sortType}
		<if test="count != null">
			LIMIT 0, ${count}
		</if>
	</select>
	<select id="selectContents" resultMap="ResultMapWithBLOBs" parameterType="java.util.Map">
		SELECT
		<include refid="Base_Column_List" />
		FROM IDO_CMS_CONTENT C
		INNER JOIN IDO_CMS_CHANNEL L
		ON C.ChannelID = L.ChannelID AND L.ChannelPath = #{channelPath,jdbcType=VARCHAR}
		AND L.IsDelete = 0
		AND C.IsDelete = 0
		<if test="tagClass != null">
			INNER JOIN
			(SELECT ContentID, ItemCode FROM IDO_CMS_CONTENT_TAG T
			WHERE T.ClassCode = #{tagClass,jdbcType=VARCHAR} AND
			<if test="tagItem != null">
				T.ItemCode = #{tagItem,jdbcType=VARCHAR}
			</if>
			<if test="tagItems != null">
				T.ItemCode IN
				<foreach item="item" index="index" collection="tagItems" open="(" separator="," close=")">#{item}</foreach>
			</if>
			AND T.IsDelete = 0) T ON C.ContentID = T.ContentID
		</if>
		ORDER BY ${sortBy} ${sortType}
		<if test="count != null">
			LIMIT 0, ${count}
		</if>
	</select>

	<select id="selectByContentDto" resultMap="ResultMapWithBLOBs" parameterType="com.iidooo.cms.dto.extend.CmsContentDto">
		select
		<include refid="Base_Column_List" />
		from IDO_CMS_CONTENT C
		where
		<if test="contentTitle != null and contentTitle != ''">
			C.ContentTitle like concat('%',${contentTitle,jdbcType=VARCHAR},'%') and
		</if>
		<if test="createUser != null and createUser != ''">
			C.CreateUser = ${createUser,jdbcType=INTEGER} and
		</if>
		C.IsDelete = 0
		order by UpdateTime desc
	</select>

	<select id="selectContentByID" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
		SELECT
		<include refid="Base_Column_List" />
		, T.TemplatePath
		,
		<include refid="Blob_Column_List" />
		FROM IDO_CMS_CONTENT C
		INNER JOIN IDO_CMS_TEMPLATE T
		ON C.TemplateID = T.TemplateID AND C.ContentID = #{contentID,jdbcType=INTEGER}
		AND C.IsDelete = 0
		AND T.IsDelete = 0
	</select>

	<select id="selectMaxSequence" resultType="java.lang.Integer">
		select Max(Sequence) from IDO_CMS_CONTENT C WHERE C.IsDelete = 0
	</select>

	<insert id="insert" useGeneratedKeys="true" keyProperty="contentID" parameterType="com.iidooo.cms.dto.extend.CmsContentDto">
		insert into IDO_CMS_CONTENT (ModelID, ChannelID, TemplateID,
		ContentTitle, ContentSubTitle,
		ContentImageTitle,
		MetaTitle, MetaKeywords, MetaDescription,
		ContentSummary, Sequence, IsAllowComment,
		Remarks,
		CreateTime, CreateUser,
		UpdateTime,
		UpdateUser, IsDelete,
		Version, ContentBody)
		values(#{modelID,jdbcType=INTEGER}, #{channelID,jdbcType=INTEGER},
		#{templateID,jdbcType=INTEGER},
		#{contentTitle,jdbcType=VARCHAR}, #{contentSubTitle,jdbcType=VARCHAR}, #{contentImageTitle,jdbcType=VARCHAR},
		#{metaTitle,jdbcType=VARCHAR},
		#{metaKeywords,jdbcType=VARCHAR}, #{metaDescription,jdbcType=VARCHAR},
		#{contentSummary,jdbcType=VARCHAR},
		#{sequence,jdbcType=INTEGER},
		#{isAllowComment,jdbcType=INTEGER},
		#{remarks,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR},
		#{createUser,jdbcType=INTEGER},
		#{updateTime,jdbcType=VARCHAR}, #{updateUser,jdbcType=INTEGER}, 0, 1,
		#{contentBody,jdbcType=LONGVARCHAR})
	</insert>

	<update id="updateByPrimaryKey" parameterType="com.iidooo.cms.dto.extend.CmsContentDto">
		update IDO_CMS_CONTENT
		set ChannelID = #{channelID,jdbcType=INTEGER},
		TemplateID =
		#{templateID,jdbcType=INTEGER},
		ContentTitle = #{contentTitle,jdbcType=VARCHAR},
		ContentSubTitle = #{contentSubTitle,jdbcType=VARCHAR},
		ContentImageTitle = #{contentImageTitle,jdbcType=VARCHAR},
		MetaTitle = #{metaTitle,jdbcType=VARCHAR},
		MetaKeywords = #{metaKeywords,jdbcType=VARCHAR},
		MetaDescription = #{metaDescription,jdbcType=VARCHAR},
		ContentSummary = #{contentSummary,jdbcType=VARCHAR},
		ContentBody =
		#{contentBody,jdbcType=LONGVARCHAR},
		Sequence = #{sequence,jdbcType=INTEGER},
		IsAllowComment = #{isAllowComment,jdbcType=INTEGER},
		Remarks =
		#{remarks,jdbcType=VARCHAR},
		UpdateTime = #{updateTime,jdbcType=VARCHAR},
		UpdateUser = #{updateUser,jdbcType=INTEGER},
		Version = Version + 1
		where
		ContentID = #{contentID,jdbcType=INTEGER}
	</update>

	<update id="deleteByPrimaryKey" parameterType="com.iidooo.cms.dto.extend.CmsContentDto">
		update IDO_CMS_CONTENT
		set IsDelete = 1
		UpdateTime = #{updateTime,jdbcType=VARCHAR},
		UpdateUser =
		#{updateUser,jdbcType=INTEGER},
		Version = Version + 1
		where ContentID = #{contentID,jdbcType=INTEGER}
	</update> -->
</mapper>